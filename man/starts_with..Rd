% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_helpers.R
\name{starts_with.}
\alias{starts_with.}
\alias{dt_starts_with}
\alias{contains.}
\alias{dt_contains}
\alias{ends_with.}
\alias{dt_ends_with}
\alias{everything.}
\alias{dt_everything}
\alias{any_of.}
\alias{dt_any_of}
\title{Select helpers}
\usage{
starts_with.(match, ignore.case = TRUE, vars = NULL)

dt_starts_with(match, ignore.case = TRUE, vars = NULL)

contains.(match, ignore.case = TRUE, vars = NULL)

dt_contains(match, ignore.case = TRUE, vars = NULL)

ends_with.(match, ignore.case = TRUE, vars = NULL)

dt_ends_with(match, ignore.case = TRUE, vars = NULL)

everything.(vars = NULL)

dt_everything(vars = NULL)

any_of.(x, ..., vars = NULL)

dt_any_of(x, ..., vars = NULL)
}
\arguments{
\item{match}{A character vector. If length > 1, the union of the
matches is taken.}

\item{ignore.case}{If \code{TRUE}, the default, ignores case when matching
names.}

\item{vars}{A character vector of variable names. When called
from inside selecting functions like \code{\link[=select.]{select.()}} these are
automatically set to the names of the table.}

\item{x}{An index vector of names or locations.}

\item{...}{These dots are for future extensions and must be empty.}
}
\description{
Please note these functions are leftover from before \code{tidytable} used \code{tidyselect}.
You can use these or the normal \code{tidyselect} helpers.

These functions allow you to select variables based on their names.
\itemize{
\item \code{any_of.()}: Select using a character vector
\item \code{contains.()}: Contains a literal string or regex match
\item \code{everything.()}: Matches all variables
\item \code{starts_with.()}: Starts with a prefix
\item \code{ends_with.()}: Ends with a suffix
}
}
\examples{
example_dt <- tidytable(
  x = 1,
  y = 2,
  double_x = 2,
  double_y = 4)

example_dt \%>\%
  select.(starts_with.("x"))

example_dt \%>\%
  select.(ends_with.("y"))
}
